// Code generated by protoc-gen-go. DO NOT EDIT.
// source: order_service.proto

package ecommerce

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Order struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Price                float32  `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
	Status               string   `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_93a121d2d2ec3d32, []int{0}
}

func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (m *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(m, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Order) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Order) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Order) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Order) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*Order)(nil), "ecommerce.Order")
}

func init() { proto.RegisterFile("order_service.proto", fileDescriptor_93a121d2d2ec3d32) }

var fileDescriptor_93a121d2d2ec3d32 = []byte{
	// 237 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0x41, 0x4b, 0x03, 0x31,
	0x10, 0x85, 0xd9, 0xb5, 0x5b, 0xd8, 0x29, 0x14, 0x19, 0x45, 0x42, 0x11, 0x59, 0x3c, 0xf5, 0x94,
	0x82, 0x9e, 0xfd, 0x01, 0x82, 0x20, 0xb4, 0xe0, 0x55, 0xd2, 0xec, 0x74, 0x0d, 0x74, 0x37, 0x61,
	0x92, 0xd5, 0x83, 0x7f, 0xc4, 0x9f, 0x2b, 0x4e, 0x54, 0x7a, 0xda, 0x5b, 0xde, 0x7c, 0x2f, 0x2f,
	0x2f, 0x03, 0x17, 0x9e, 0x5b, 0xe2, 0xd7, 0x48, 0xfc, 0xee, 0x2c, 0xe9, 0xc0, 0x3e, 0x79, 0xac,
	0xc9, 0xfa, 0xbe, 0x27, 0xb6, 0xb4, 0xba, 0xe9, 0xbc, 0xef, 0x8e, 0xb4, 0x11, 0xb0, 0x1f, 0x0f,
	0x9b, 0x0f, 0x36, 0x21, 0x10, 0xc7, 0x6c, 0xbd, 0xfd, 0x84, 0xea, 0xf9, 0x27, 0x01, 0x97, 0x50,
	0xba, 0x56, 0x15, 0x4d, 0xb1, 0xae, 0xb7, 0xa5, 0x6b, 0x11, 0x61, 0x36, 0x98, 0x9e, 0x54, 0x29,
	0x13, 0x39, 0x63, 0x03, 0x8b, 0x96, 0xa2, 0x65, 0x17, 0x92, 0xf3, 0x83, 0x3a, 0x13, 0x74, 0x3a,
	0xc2, 0x4b, 0xa8, 0x02, 0x3b, 0x4b, 0x6a, 0xd6, 0x14, 0xeb, 0x72, 0x9b, 0x05, 0x5e, 0xc1, 0x3c,
	0x26, 0x93, 0xc6, 0xa8, 0x2a, 0xb9, 0xf2, 0xab, 0xee, 0xbe, 0x0a, 0xa8, 0xe5, 0xf5, 0xc7, 0xe1,
	0xe0, 0xf1, 0x09, 0x96, 0x1d, 0x25, 0xd1, 0x3b, 0xe1, 0x78, 0xad, 0x73, 0x7b, 0xfd, 0xd7, 0x5e,
	0xef, 0x12, 0xbb, 0xa1, 0x7b, 0x31, 0xc7, 0x91, 0x56, 0x93, 0x14, 0x1f, 0x60, 0x11, 0xc9, 0xb0,
	0x7d, 0xcb, 0xdf, 0x9b, 0x8e, 0x3a, 0xd7, 0xff, 0x1b, 0xd3, 0xe2, 0xdf, 0xcf, 0xc5, 0x77, 0xff,
	0x1d, 0x00, 0x00, 0xff, 0xff, 0xea, 0x12, 0xd3, 0x21, 0x60, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OrderInfoClient is the client API for OrderInfo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrderInfoClient interface {
	GetOrderStatus(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (*wrappers.StringValue, error)
	SearchOrder(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (*Order, error)
}

type orderInfoClient struct {
	cc *grpc.ClientConn
}

func NewOrderInfoClient(cc *grpc.ClientConn) OrderInfoClient {
	return &orderInfoClient{cc}
}

func (c *orderInfoClient) GetOrderStatus(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (*wrappers.StringValue, error) {
	out := new(wrappers.StringValue)
	err := c.cc.Invoke(ctx, "/ecommerce.OrderInfo/getOrderStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderInfoClient) SearchOrder(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (*Order, error) {
	out := new(Order)
	err := c.cc.Invoke(ctx, "/ecommerce.OrderInfo/searchOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrderInfoServer is the server API for OrderInfo service.
type OrderInfoServer interface {
	GetOrderStatus(context.Context, *wrappers.StringValue) (*wrappers.StringValue, error)
	SearchOrder(context.Context, *wrappers.StringValue) (*Order, error)
}

// UnimplementedOrderInfoServer can be embedded to have forward compatible implementations.
type UnimplementedOrderInfoServer struct {
}

func (*UnimplementedOrderInfoServer) GetOrderStatus(ctx context.Context, req *wrappers.StringValue) (*wrappers.StringValue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrderStatus not implemented")
}
func (*UnimplementedOrderInfoServer) SearchOrder(ctx context.Context, req *wrappers.StringValue) (*Order, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchOrder not implemented")
}

func RegisterOrderInfoServer(s *grpc.Server, srv OrderInfoServer) {
	s.RegisterService(&_OrderInfo_serviceDesc, srv)
}

func _OrderInfo_GetOrderStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(wrappers.StringValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderInfoServer).GetOrderStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ecommerce.OrderInfo/GetOrderStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderInfoServer).GetOrderStatus(ctx, req.(*wrappers.StringValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderInfo_SearchOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(wrappers.StringValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderInfoServer).SearchOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ecommerce.OrderInfo/SearchOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderInfoServer).SearchOrder(ctx, req.(*wrappers.StringValue))
	}
	return interceptor(ctx, in, info, handler)
}

var _OrderInfo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ecommerce.OrderInfo",
	HandlerType: (*OrderInfoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getOrderStatus",
			Handler:    _OrderInfo_GetOrderStatus_Handler,
		},
		{
			MethodName: "searchOrder",
			Handler:    _OrderInfo_SearchOrder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "order_service.proto",
}
